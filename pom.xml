<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.WalgreensAhmed</groupId>
    <artifactId>WalgreensProject</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <selenium-version>3.141.59</selenium-version>
        <junit-version>4.12</junit-version>
        <hamcrest-version>1.3</hamcrest-version>
        <webdrivermanager.version>3.6.0</webdrivermanager.version>
        <cucumber.version>4.3.1</cucumber.version>
        <cucumber.expressions.version>7.0.0</cucumber.expressions.version>
        <cucumber-reporting.version>4.7.0</cucumber-reporting.version>
        <browser>CH</browser>
        <TAG></TAG>
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium-version}</version>
        </dependency>

        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>${webdrivermanager.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-expressions</artifactId>
            <version>${cucumber.expressions.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest-version}</version>
        </dependency>

        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>cucumber-reporting</artifactId>
            <version>${cucumber-reporting.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.7</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.0</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.1.2</version>
        </dependency>
        <!-- <dependency>
             <groupId>com.automation-remarks</groupId>
             <artifactId>video-recorder</artifactId>
             <version>1.0.2</version>
         </dependency>-->

        <dependency>
            <groupId>com.github.temyers</groupId>
            <artifactId>cucumber-jvm-parallel-plugin</artifactId>
            <version>5.0.0</version>
        </dependency>

        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>cucumber-reporting</artifactId>
            <version>4.5.1</version>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- This for execution -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <!--
                                <include>**/BDDRunner.class</include>
                                -->
                                <include>**/*IT.class</include>
                            </includes>
                            <forkCount>4</forkCount>
                            <reuseForks>true</reuseForks>
                            <testFailureIgnore>true</testFailureIgnore>
                            <environmentVariables>
                                <browser>${browser}</browser>
                            </environmentVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--            <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>2.20.1</version>
                            <configuration>
                                <includes>
                                    &lt;!&ndash;
                                    <include>**/BDDRunner.class</include>
                                    &ndash;&gt;
                                    <include>**/*IT.class</include>
                                </includes>
                                <forkCount>4</forkCount>
                                <reuseForks>true</reuseForks>
                                <testFailureIgnore>true</testFailureIgnore>
                                <environmentVariables>
                                    <browser>FF</browser>
                                </environmentVariables>
                            </configuration>
                        </plugin>-->

            <plugin>
                <groupId>com.github.temyers</groupId>
                <artifactId>cucumber-jvm-parallel-plugin</artifactId>
                <version>5.0.0</version>
                <executions>
                    <execution>
                        <id>generateRunners</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>generateRunners</goal>
                        </goals>
                        <configuration>
                            <!-- Mandatory -->
                            <!-- The directory, which must be in the root of the runtime classpath,
                                containing your feature files. -->
                            <featuresDirectory>C:/MyDevelopment/WalgreensProject/src/test/resources</featuresDirectory>
                            <!-- comma separated list of package names to scan for glue code -->
                            <glue>com/stepsDefinition</glue>

                            <outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>

                            <!-- Directory where the cucumber report files shall be written -->
                            <cucumberOutputDir>${project.build.directory}/cucumber-report/json</cucumberOutputDir>

                            <!-- comma separated list of output formats json,html,rerun.txt -->
                            <format>json</format>
                            <!-- CucumberOptions.strict property -->
                            <strict>true</strict>
                            <!-- CucumberOptions.monochrome property -->
                            <monochrome>false</monochrome>
                            <!-- The tags to run, maps to CucumberOptions.tags property you can
                                pass ANDed tags like "@tag1","@tag2" and ORed tags like "@tag1,@tag2,@tag3" -->
                            <tags>${TAG}</tags>
                            <!-- If set to true, only feature files containing the required tags
                                shall be generated. -->
                            <!--
                            <filterFeaturesByTags>true</filterFeaturesByTags>
                            -->
                            <!-- Generate TestNG runners instead of default JUnit ones. -->
                            <useTestNG>false</useTestNG>
                            <!-- The naming scheme to use for the generated test classes. One
                                of 'simple' or 'feature-title' -->
                            <namingScheme>simple</namingScheme>
                            <!-- The class naming pattern to use. Only required/used if naming
                                scheme is 'pattern'. -->
                            <namingPattern>Parallel{c}IT</namingPattern>
                            <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per
                                scenario. FEATURE generates a runner per feature. -->
                            <parallelScheme>SCENARIO</parallelScheme>
                            <!-- This is optional, required only if you want to specify a custom
                                template for the generated sources (this is a relative path) -->
                            <!-- <customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Cucumber reporting -->
            <plugin>
                <groupId>com.trivago.rta</groupId>
                <artifactId>cluecumber-report-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>reporting</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourceJsonReportDirectory>${project.build.directory}/cucumber-report/json</sourceJsonReportDirectory>
                    <generatedHtmlReportDirectory>${project.build.directory}/cucumber-report</generatedHtmlReportDirectory>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>